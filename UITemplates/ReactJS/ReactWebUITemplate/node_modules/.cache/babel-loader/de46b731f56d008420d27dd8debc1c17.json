{"ast":null,"code":"var _jsxFileName = \"/Users/ctkit/git/Pollux/Web/src/app/screens/Product/Form.js\",\n    _class,\n    _temp;\n\nimport React, { Component, Fragment } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport { TextField, Select, InputLabel, MenuItem, Fab, Grid, Checkbox, FormControlLabel, Box, Input } from '@material-ui/core';\nimport { Add, Edit } from '@material-ui/icons';\nimport { borders } from '@material-ui/system';\nimport UserContext from '../../context';\nimport { UserTypes } from '../../utils/appConst';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2)\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500]\n  },\n  gridContainer: {\n    display: 'flex',\n    alignItems: 'baseline',\n    paddingLeft: 30,\n    justifyContent: 'space-between'\n  },\n  dottedBox: {\n    margin: '40px',\n    border: '1px solid pink',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    padding: 20\n  },\n  productWrapper: {\n    margin: '40px',\n    border: '1px solid'\n  },\n  moreInfo: {\n    border: '1px solid blue'\n  },\n  outterContainer: {\n    display: 'block',\n    border: '1px solid',\n    margin: 25\n  },\n  container: {\n    display: 'flex',\n    border: '1px solid',\n    alignItems: 'center',\n    backgroundColor: '#b5bcc7'\n  },\n  left: {\n    flex: 0.1,\n    minWidth: 25,\n    textAlign: 'center',\n    backgroundColor: '#b5bcc7'\n  },\n  right: {\n    flex: 0.1,\n    minWidth: 25,\n    backgroundColor: '#b5bcc7'\n  },\n  componentPanelWrapper: {\n    flex: 3\n  },\n  componentPanel: {\n    display: 'flex',\n    borderBottom: '1px solid'\n  },\n  caption: {\n    flex: 1,\n    backgroundColor: 'grey'\n  },\n  control: {\n    flex: 3,\n    backgroundColor: 'white'\n  },\n  moreInfoContainer: {\n    display: 'flex',\n    width: '100%',\n    minHeight: 200,\n    backgroundColor: 'blue'\n  },\n  moreInfoControlWrapper: {\n    margin: 10,\n    display: 'block'\n  },\n  moreInfoControl: {\n    display: 'flex',\n    minHeight: 40,\n    border: '1px solid'\n  }\n});\n\nconst defaultProps = {\n  bgcolor: 'background.paper',\n  border: 1,\n  m: 1,\n  borderColor: 'text.primary',\n  style: {\n    width: '5rem',\n    height: '5rem'\n  }\n};\nconst DialogTitle = withStyles(styles)(props => {\n  const {\n    children,\n    classes,\n    onClose,\n    ...other\n  } = props;\n  return /*#__PURE__*/React.createElement(MuiDialogTitle, Object.assign({\n    disableTypography: true,\n    className: classes.root\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }, children), onClose ? /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"close\",\n    className: classes.closeButton,\n    onClick: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CloseIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  })) : null);\n});\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2)\n  }\n}))(MuiDialogContent);\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1)\n  }\n}))(MuiDialogActions);\nexport default withStyles(styles)((_temp = _class = class extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      open: false,\n      updatePassword: false,\n      products: []\n    };\n    this.state = this.getInitState();\n\n    this.addItem = index => {\n      let newProduct = {\n        Artikelnr: '',\n        EANCode: '',\n        Beskrivning: '',\n        Options: [{\n          AttributeId: null,\n          Value: ''\n        }]\n      };\n      const products = this.state.Products;\n      products.splice(index + 1, 0, newProduct);\n      this.setState({\n        Products: products\n      });\n    };\n\n    this.addOption = index => {\n      const products = this.state.Products;\n      const option = {\n        AttributeId: '',\n        Value: ''\n      };\n      products[index].Options.push(option);\n      this.setState({\n        Products: products\n      });\n    };\n\n    this.handleCheckChange = event => {\n      this.setState({\n        IsActive: event.target.checked\n      });\n    };\n\n    this.handleChange = ({\n      target: {\n        value,\n        name\n      }\n    }) => {\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleArticleNumberChange = (value, index) => {\n      const products = this.state.Products;\n      products[index].Artikelnr = value;\n    };\n\n    this.handleBeskrivningChange = (value, index) => {\n      const products = this.state.Products;\n      products[index].Beskrivning = value;\n    };\n\n    this.handleProductPropertiesChange = (value, index, name) => {\n      const products = this.state.Products;\n      products[index][name] = value;\n    };\n\n    this.handleOptionChange = (value, productIndex, OptionIndex, name) => {\n      const products = this.state.Products;\n      const options = products[productIndex].Options;\n      options[OptionIndex][name] = value;\n    };\n\n    this.handleToggle = () => {\n      console.log('open:', this.state.open);\n      this.setState({\n        open: !this.state.open\n      }); // this.setState({ Products: [] });\n    };\n\n    this.handleSubmit = () => {\n      this.handleToggle();\n      const category = {\n        Title: this.state.Title,\n        Description: this.state.Description,\n        Application: this.state.Application,\n        ImageURL: this.state.ImageURL,\n        Products: this.state.Products\n      };\n      this.props.onSave(category);\n    };\n  }\n\n  getInitState() {\n    console.log('I am here');\n    const {\n      category\n    } = this.props;\n    return {\n      Title: '',\n      Description: '',\n      Application: '',\n      ImageURL: '',\n      Products: [{\n        Artikelnr: '',\n        EANCode: '',\n        Beskrivning: '',\n        Options: [{\n          AttributeId: null,\n          Value: ''\n        }]\n      }]\n    };\n  }\n\n  render() {\n    const {\n      open\n    } = this.state;\n    const {\n      Title,\n      Description,\n      ImageURL,\n      Application,\n      Products\n    } = this.state;\n    const {\n      customers,\n      userTypes,\n      isEdit,\n      classes,\n      attributes\n    } = this.props;\n    const {\n      user\n    } = this.context;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }\n    }, isEdit ? /*#__PURE__*/React.createElement(IconButton, {\n      color: \"secondary\",\n      size: \"small\",\n      onClick: this.handleToggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Edit, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 15\n      }\n    })) : /*#__PURE__*/React.createElement(Fab, {\n      onClick: this.handleToggle,\n      color: \"secondary\",\n      disabled: user.UserType !== UserTypes.FASTEX_USER,\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Add, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Dialog, {\n      fullScreen: true,\n      onClose: this.handleToggle,\n      \"aria-labelledby\": \"customized-dialog-title\",\n      open: open,\n      fullWidth: true,\n      disableBackdropClick: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(DialogTitle, {\n      id: \"customized-dialog-title\",\n      onClose: this.handleToggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 13\n      }\n    }, isEdit ? 'Update products' : 'Create new products'), /*#__PURE__*/React.createElement(DialogContent, {\n      dividers: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      item: true,\n      xs: 4,\n      className: classes.gridContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      fullWidth: true,\n      id: \"Title\",\n      label: \"Kategori\",\n      name: \"Title\",\n      size: \"small\",\n      value: Title,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      fullWidth: true,\n      multiline: true,\n      rowsMax: 4,\n      id: \"Description\",\n      label: \"Beskrivning\",\n      name: \"Description\",\n      value: Description,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      fullWidth: true,\n      multiline: true,\n      rowsMax: 2,\n      id: \"Application\",\n      label: \"Anv\\xE4ndningsomr\\xE5de\",\n      name: \"Application\",\n      value: Application,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      fullWidth: true,\n      id: \"ImageURL\",\n      label: \"Foto URL\",\n      name: \"ImageURL\",\n      value: ImageURL,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.outterContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 15\n      }\n    }, Products.map((item, index) => /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.container,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.left,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 21\n      }\n    }, \" \", index + 1, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.componentPanelWrapper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.componentPanel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.caption,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 25\n      }\n    }, \"Artikelnr\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.control,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      fullWidth: true,\n      onChange: event => {\n        let {\n          name,\n          value\n        } = event.target;\n        this.handleArticleNumberChange(value, index);\n        this.setState({\n          [name]: value\n        });\n      },\n      name: 'Artikelnr' + index,\n      value: item.Artikelnr,\n      index: index,\n      placeholder: \"Artikelnr\",\n      inputProps: {\n        'aria-label': 'Artikelnr'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 27\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.componentPanel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.caption,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 25\n      }\n    }, \"EANCode\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.control,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      fullWidth: true,\n      onChange: event => {\n        let {\n          name,\n          value\n        } = event.target;\n        this.handleProductPropertiesChange(value, index, name);\n        this.setState({\n          [name]: value\n        });\n      },\n      name: 'EANCode',\n      value: item.EANCode,\n      placeholder: \"EANCode\",\n      inputProps: {\n        'aria-label': 'EANCode'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 27\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.componentPanel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.caption,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 25\n      }\n    }, \"Beskrivning\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.control,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      fullWidth: true,\n      onChange: event => {\n        let {\n          name,\n          value\n        } = event.target;\n        this.handleBeskrivningChange(value, index);\n        this.setState({\n          [name]: value\n        });\n      },\n      name: 'Beskrivning' + index,\n      value: item.Beskrivning,\n      placeholder: \"Beskrivning\",\n      inputProps: {\n        'aria-label': 'Beskrivning'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 27\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.componentPanel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.moreInfoContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.caption,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 27\n      }\n    }, \"Mer information\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.control,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.moreInfoControlWrapper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.moreInfoControl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.left,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.componentPanelWrapper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        flex: 0.5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 37\n      }\n    }, \"Benamning\"), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        flex: 0.5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 37\n      }\n    }, \"Data\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.right,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 33\n      }\n    })), item.Options.map((item, optionIndex) => /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.moreInfoControl,\n      key: optionIndex,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.left,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 35\n      }\n    }, optionIndex + 1), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.componentPanelWrapper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        flex: 0.5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 39\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      fullWidth: true,\n      native: true,\n      value: item.AttributeId,\n      name: 'AttributeId',\n      onChange: event => {\n        let {\n          name,\n          value\n        } = event.target;\n        this.handleOptionChange(value, index, optionIndex, name);\n        this.setState({\n          [name]: value\n        });\n      },\n      inputProps: {\n        name: 'AttributeId',\n        id: 'age-native-simple'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      \"aria-label\": \"None\",\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 43\n      }\n    }), attributes.map(item => /*#__PURE__*/React.createElement(\"option\", {\n      value: item.Id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 45\n      }\n    }, item.Title)))), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        flex: 0.5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 39\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      fullWidth: true,\n      placeholder: \"Data\",\n      value: item.Value,\n      name: 'Value',\n      onChange: event => {\n        let {\n          name,\n          value\n        } = event.target;\n        this.handleOptionChange(value, index, optionIndex, name);\n        this.setState({\n          [name]: value\n        });\n      },\n      inputProps: {\n        'aria-label': 'Value'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 41\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.right,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 35\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        paddingTop: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: () => {\n        this.addOption(index);\n      },\n      color: \"secondary\",\n      variant: \"contained\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 33\n      }\n    }, \"L\\xE4gg till rad\"))))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.right,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 523,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 524,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Fab, {\n      onClick: () => {\n        this.addItem(index);\n      },\n      color: \"secondary\",\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 525,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Add, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 532,\n        columnNumber: 27\n      }\n    })))))))), /*#__PURE__*/React.createElement(DialogActions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 540,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: this.handleSubmit,\n      color: \"secondary\",\n      variant: \"contained\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 541,\n        columnNumber: 15\n      }\n    }, isEdit ? 'Redigera' : 'Skapa'))));\n  }\n\n}, _class.contextType = UserContext, _temp));","map":{"version":3,"sources":["/Users/ctkit/git/Pollux/Web/src/app/screens/Product/Form.js"],"names":["React","Component","Fragment","withStyles","Button","Dialog","MuiDialogTitle","MuiDialogContent","MuiDialogActions","IconButton","CloseIcon","Typography","TextField","Select","InputLabel","MenuItem","Fab","Grid","Checkbox","FormControlLabel","Box","Input","Add","Edit","borders","UserContext","UserTypes","styles","theme","root","margin","padding","spacing","closeButton","position","right","top","color","palette","grey","gridContainer","display","alignItems","paddingLeft","justifyContent","dottedBox","border","flexDirection","productWrapper","moreInfo","outterContainer","container","backgroundColor","left","flex","minWidth","textAlign","componentPanelWrapper","componentPanel","borderBottom","caption","control","moreInfoContainer","width","minHeight","moreInfoControlWrapper","moreInfoControl","defaultProps","bgcolor","m","borderColor","style","height","DialogTitle","props","children","classes","onClose","other","DialogContent","DialogActions","state","open","updatePassword","products","getInitState","addItem","index","newProduct","Artikelnr","EANCode","Beskrivning","Options","AttributeId","Value","Products","splice","setState","addOption","option","push","handleCheckChange","event","IsActive","target","checked","handleChange","value","name","handleArticleNumberChange","handleBeskrivningChange","handleProductPropertiesChange","handleOptionChange","productIndex","OptionIndex","options","handleToggle","console","log","handleSubmit","category","Title","Description","Application","ImageURL","onSave","render","customers","userTypes","isEdit","attributes","user","context","UserType","FASTEX_USER","map","item","optionIndex","id","Id","paddingTop","contextType"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport {\n  TextField,\n  Select,\n  InputLabel,\n  MenuItem,\n  Fab,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  Box,\n  Input,\n} from '@material-ui/core';\nimport { Add, Edit } from '@material-ui/icons';\nimport { borders } from '@material-ui/system';\nimport UserContext from '../../context';\nimport { UserTypes } from '../../utils/appConst';\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n  gridContainer: {\n    display: 'flex',\n    alignItems: 'baseline',\n    paddingLeft: 30,\n    justifyContent: 'space-between',\n  },\n  dottedBox: {\n    margin: '40px',\n    border: '1px solid pink',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    padding: 20,\n  },\n  productWrapper: {\n    margin: '40px',\n    border: '1px solid',\n  },\n  moreInfo: {\n    border: '1px solid blue',\n  },\n  outterContainer: {\n    display: 'block',\n    border: '1px solid',\n    margin: 25,\n  },\n  container: {\n    display: 'flex',\n    border: '1px solid',\n    alignItems: 'center',\n    backgroundColor: '#b5bcc7',\n  },\n  left: {\n    flex: 0.1,\n    minWidth: 25,\n    textAlign: 'center',\n    backgroundColor: '#b5bcc7',\n  },\n  right: {\n    flex: 0.1,\n    minWidth: 25,\n    backgroundColor: '#b5bcc7',\n  },\n  componentPanelWrapper: {\n    flex: 3,\n  },\n  componentPanel: {\n    display: 'flex',\n    borderBottom: '1px solid',\n  },\n  caption: {\n    flex: 1,\n    backgroundColor: 'grey',\n  },\n  control: {\n    flex: 3,\n    backgroundColor: 'white',\n  },\n  moreInfoContainer: {\n    display: 'flex',\n    width: '100%',\n    minHeight: 200,\n    backgroundColor: 'blue',\n  },\n  moreInfoControlWrapper: {\n    margin: 10,\n    display: 'block',\n  },\n  moreInfoControl: {\n    display: 'flex',\n    minHeight: 40,\n    border: '1px solid',\n  },\n});\nconst defaultProps = {\n  bgcolor: 'background.paper',\n  border: 1,\n  m: 1,\n  borderColor: 'text.primary',\n  style: { width: '5rem', height: '5rem' },\n};\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant='h6'>{children}</Typography>\n      {onClose ? (\n        <IconButton\n          aria-label='close'\n          className={classes.closeButton}\n          onClick={onClose}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default withStyles(styles)(\n  class extends Component {\n    state = {\n      open: false,\n      updatePassword: false,\n      products: [],\n    };\n    state = this.getInitState();\n\n    static contextType = UserContext;\n\n    getInitState() {\n      console.log('I am here');\n      const { category } = this.props;\n      return {\n        Title: '',\n        Description: '',\n        Application: '',\n        ImageURL: '',\n        Products: [\n          {\n            Artikelnr: '',\n            EANCode: '',\n            Beskrivning: '',\n            Options: [{ AttributeId: null, Value: '' }],\n          },\n        ],\n      };\n    }\n    addItem = (index) => {\n      let newProduct = {\n        Artikelnr: '',\n        EANCode: '',\n        Beskrivning: '',\n        Options: [{ AttributeId: null, Value: '' }],\n      };\n      const products = this.state.Products;\n      products.splice(index + 1, 0, newProduct);\n      this.setState({ Products: products });\n    };\n\n    addOption = (index) => {\n      const products = this.state.Products;\n      const option = { AttributeId: '', Value: '' };\n      products[index].Options.push(option);\n      this.setState({ Products: products });\n    };\n\n    handleCheckChange = (event) => {\n      this.setState({ IsActive: event.target.checked });\n    };\n\n    handleChange = ({ target: { value, name } }) => {\n      this.setState({\n        [name]: value,\n      });\n    };\n\n    handleArticleNumberChange = (value, index) => {\n      const products = this.state.Products;\n      products[index].Artikelnr = value;\n    };\n\n    handleBeskrivningChange = (value, index) => {\n      const products = this.state.Products;\n      products[index].Beskrivning = value;\n    };\n\n    handleProductPropertiesChange = (value, index, name) => {\n      const products = this.state.Products;\n      products[index][name] = value;\n    };\n    handleOptionChange = (value, productIndex, OptionIndex, name) => {\n      const products = this.state.Products;\n      const options = products[productIndex].Options;\n      options[OptionIndex][name] = value;\n    };\n\n    handleToggle = () => {\n      console.log('open:', this.state.open);\n      this.setState({ open: !this.state.open });\n\n      // this.setState({ Products: [] });\n    };\n\n    handleSubmit = () => {\n      this.handleToggle();\n      const category = {\n        Title: this.state.Title,\n        Description: this.state.Description,\n        Application: this.state.Application,\n        ImageURL: this.state.ImageURL,\n        Products: this.state.Products,\n      };\n      this.props.onSave(category);\n    };\n\n    render() {\n      const { open } = this.state;\n      const {\n        Title,\n        Description,\n        ImageURL,\n        Application,\n        Products,\n      } = this.state;\n      const { customers, userTypes, isEdit, classes, attributes } = this.props;\n      const { user } = this.context;\n      return (\n        <div>\n          {isEdit ? (\n            <IconButton\n              color='secondary'\n              size='small'\n              onClick={this.handleToggle}\n            >\n              <Edit />\n            </IconButton>\n          ) : (\n            <Fab\n              onClick={this.handleToggle}\n              color='secondary'\n              disabled={user.UserType !== UserTypes.FASTEX_USER}\n              size='small'\n            >\n              <Add />\n            </Fab>\n          )}\n          <Dialog\n            fullScreen\n            onClose={this.handleToggle}\n            aria-labelledby='customized-dialog-title'\n            open={open}\n            fullWidth\n            disableBackdropClick\n          >\n            <DialogTitle\n              id='customized-dialog-title'\n              onClose={this.handleToggle}\n            >\n              {isEdit ? 'Update products' : 'Create new products'}\n            </DialogTitle>\n            <DialogContent dividers>\n              <Grid container item xs={4} className={classes.gridContainer}>\n                <TextField\n                  fullWidth\n                  id='Title'\n                  label='Kategori'\n                  name='Title'\n                  size='small'\n                  value={Title}\n                  onChange={this.handleChange}\n                />\n                <br />\n                <TextField\n                  fullWidth\n                  multiline\n                  rowsMax={4}\n                  id='Description'\n                  label='Beskrivning'\n                  name='Description'\n                  value={Description}\n                  onChange={this.handleChange}\n                />\n                <TextField\n                  fullWidth\n                  multiline\n                  rowsMax={2}\n                  id='Application'\n                  label='Användningsområde'\n                  name='Application'\n                  value={Application}\n                  onChange={this.handleChange}\n                />\n                <TextField\n                  fullWidth\n                  id='ImageURL'\n                  label='Foto URL'\n                  name='ImageURL'\n                  value={ImageURL}\n                  onChange={this.handleChange}\n                />\n              </Grid>\n              <div className={classes.outterContainer}>\n                {Products.map((item, index) => (\n                  <div className={classes.container} key={index}>\n                    <div className={classes.left}> {index + 1} </div>\n                    <div className={classes.componentPanelWrapper}>\n                      <div className={classes.componentPanel}>\n                        <div className={classes.caption}>Artikelnr</div>\n                        <div className={classes.control}>\n                          <Input\n                            fullWidth\n                            onChange={(event) => {\n                              let { name, value } = event.target;\n                              this.handleArticleNumberChange(value, index);\n                              this.setState({\n                                [name]: value,\n                              });\n                            }}\n                            name={'Artikelnr' + index}\n                            value={item.Artikelnr}\n                            index={index}\n                            placeholder='Artikelnr'\n                            inputProps={{ 'aria-label': 'Artikelnr' }}\n                          />\n                        </div>\n                      </div>\n                      <div className={classes.componentPanel}>\n                        <div className={classes.caption}>EANCode</div>\n                        <div className={classes.control}>\n                          <Input\n                            fullWidth\n                            onChange={(event) => {\n                              let { name, value } = event.target;\n                              this.handleProductPropertiesChange(\n                                value,\n                                index,\n                                name\n                              );\n                              this.setState({\n                                [name]: value,\n                              });\n                            }}\n                            name={'EANCode'}\n                            value={item.EANCode}\n                            placeholder='EANCode'\n                            inputProps={{ 'aria-label': 'EANCode' }}\n                          />\n                        </div>\n                      </div>\n                      <div className={classes.componentPanel}>\n                        <div className={classes.caption}>Beskrivning</div>\n                        <div className={classes.control}>\n                          <Input\n                            fullWidth\n                            onChange={(event) => {\n                              let { name, value } = event.target;\n                              this.handleBeskrivningChange(value, index);\n                              this.setState({\n                                [name]: value,\n                              });\n                            }}\n                            name={'Beskrivning' + index}\n                            value={item.Beskrivning}\n                            placeholder='Beskrivning'\n                            inputProps={{ 'aria-label': 'Beskrivning' }}\n                          />\n                        </div>\n                      </div>\n                      <div className={classes.componentPanel}>\n                        <div className={classes.moreInfoContainer}>\n                          <div className={classes.caption}>Mer information</div>\n                          <div className={classes.control}>\n                            <div className={classes.moreInfoControlWrapper}>\n                              <div className={classes.moreInfoControl}>\n                                <div className={classes.left}></div>\n                                <div className={classes.componentPanelWrapper}>\n                                  <div style={{ display: 'flex' }}>\n                                    <div\n                                      style={{\n                                        flex: 0.5,\n                                      }}\n                                    >\n                                      Benamning\n                                    </div>\n                                    <div\n                                      style={{\n                                        flex: 0.5,\n                                      }}\n                                    >\n                                      Data\n                                    </div>\n                                  </div>\n                                </div>\n                                <div className={classes.right}></div>\n                              </div>\n                              {item.Options.map((item, optionIndex) => (\n                                <div\n                                  className={classes.moreInfoControl}\n                                  key={optionIndex}\n                                >\n                                  <div className={classes.left}>\n                                    {optionIndex + 1}\n                                  </div>\n                                  <div\n                                    className={classes.componentPanelWrapper}\n                                  >\n                                    <div style={{ display: 'flex' }}>\n                                      <div\n                                        style={{\n                                          flex: 0.5,\n                                        }}\n                                      >\n                                        <Select\n                                          fullWidth\n                                          native\n                                          value={item.AttributeId}\n                                          name={'AttributeId'}\n                                          onChange={(event) => {\n                                            let { name, value } = event.target;\n                                            this.handleOptionChange(\n                                              value,\n                                              index,\n                                              optionIndex,\n                                              name\n                                            );\n                                            this.setState({\n                                              [name]: value,\n                                            });\n                                          }}\n                                          inputProps={{\n                                            name: 'AttributeId',\n                                            id: 'age-native-simple',\n                                          }}\n                                        >\n                                          <option aria-label='None' value='' />\n                                          {attributes.map((item) => (\n                                            <option value={item.Id}>\n                                              {item.Title}\n                                            </option>\n                                          ))}\n                                        </Select>\n                                      </div>\n                                      <div\n                                        style={{\n                                          flex: 0.5,\n                                        }}\n                                      >\n                                        <Input\n                                          fullWidth\n                                          placeholder='Data'\n                                          value={item.Value}\n                                          name={'Value'}\n                                          onChange={(event) => {\n                                            let { name, value } = event.target;\n                                            this.handleOptionChange(\n                                              value,\n                                              index,\n                                              optionIndex,\n                                              name\n                                            );\n                                            this.setState({\n                                              [name]: value,\n                                            });\n                                          }}\n                                          inputProps={{\n                                            'aria-label': 'Value',\n                                          }}\n                                        />\n                                      </div>\n                                    </div>\n                                  </div>\n                                  <div className={classes.right}></div>\n                                </div>\n                              ))}\n                              <div style={{ paddingTop: 10 }}>\n                                <Button\n                                  onClick={() => {\n                                    this.addOption(index);\n                                  }}\n                                  color='secondary'\n                                  variant='contained'\n                                >\n                                  Lägg till rad\n                                </Button>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div className={classes.right}>\n                      <div>\n                        <Fab\n                          onClick={() => {\n                            this.addItem(index);\n                          }}\n                          color='secondary'\n                          size='small'\n                        >\n                          <Add />\n                        </Fab>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </DialogContent>\n            <DialogActions>\n              <Button\n                onClick={this.handleSubmit}\n                color='secondary'\n                variant='contained'\n              >\n                {isEdit ? 'Redigera' : 'Skapa'}\n              </Button>\n            </DialogActions>\n          </Dialog>\n        </div>\n      );\n    }\n  }\n);\n"]},"metadata":{},"sourceType":"module"}
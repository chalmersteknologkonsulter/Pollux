{"ast":null,"code":"var _jsxFileName = \"/Users/ctkit/git/Pollux/Web/src/app/screens/User/Form.js\";\nimport React, { Component, Fragment } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport { TextField, Select, InputLabel, MenuItem, Fab, Checkbox, FormControlLabel } from '@material-ui/core';\nimport { Add, Edit } from '@material-ui/icons';\nimport UserContext from '../../context';\nimport { UserTypes } from '../../utils/appConst';\nimport { api } from '../../helpers/apiHelper';\nimport debounce from 'lodash/debounce';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2)\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500]\n  }\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const {\n    children,\n    classes,\n    onClose,\n    ...other\n  } = props;\n  return /*#__PURE__*/React.createElement(MuiDialogTitle, Object.assign({\n    disableTypography: true,\n    className: classes.root\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, children), onClose ? /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"close\",\n    className: classes.closeButton,\n    onClick: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CloseIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  })) : null);\n});\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2)\n  }\n}))(MuiDialogContent);\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1)\n  }\n}))(MuiDialogActions);\nexport default class _class extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      open: false,\n      updatePassword: false\n    };\n    this.state = this.getInitState();\n\n    this.handleCheckChange = event => {\n      this.setState({\n        IsActive: event.target.checked\n      }, () => {\n        this.checkIfFormIsReady();\n      });\n    };\n\n    this.handleChange = ({\n      target: {\n        value,\n        name\n      }\n    }) => {\n      this.setState({\n        [name]: value\n      }, () => {\n        this.checkIfFormIsReady();\n      });\n    };\n\n    this.handleLoginIdChange = (name, value) => {\n      this.setState({\n        [name]: value\n      }, () => {\n        this.checkIfLoginIdExist(value);\n      });\n    };\n\n    this.checkIfLoginIdExist = debounce(id => {\n      api.get('user/user-by-login-Id', {\n        params: {\n          id: id\n        }\n      }).then(res => {\n        if (res.data) {\n          this.setState({\n            loginIdExist: true\n          });\n        } else {\n          this.setState({\n            loginIdExist: false\n          });\n        }\n      }).catch(ex => {\n        console.log('error in api calling');\n      });\n    }, 500);\n\n    this.handleToggle = () => {\n      this.setState({\n        open: !this.state.open\n      });\n    };\n\n    this.handlePasswrodToggle = () => {\n      this.setState({\n        updatePassword: !this.state.updatePassword\n      }, () => {\n        this.checkIfFormIsReady();\n      });\n    };\n\n    this.checkIfFormIsReady = debounce(() => {\n      let ready = this.state.UserName.trim() !== '' && this.state.UserLoginId.trim() !== '';\n      if (this.state.updatePassword) ready = ready && this.state.Password && this.state.Password.trim() !== '';\n      if (this.state.UserType !== UserTypes.FASTEX_USER) ready = ready && this.state.CustomerId;\n      this.setState({\n        readyToSubmit: ready\n      });\n    }, 500);\n\n    this.handleSubmit = () => {\n      this.handleToggle();\n      const user = {\n        UserId: this.state.UserId,\n        UserName: this.state.UserName,\n        Email: this.state.Email,\n        ContactNumber: this.state.ContactNumber,\n        UserLoginId: this.state.UserLoginId,\n        UserType: this.state.UserType,\n        CustomerId: this.state.CustomerId,\n        IsActive: this.state.IsActive\n      };\n      if (this.state.updatePassword) user.Password = this.state.Password;\n      this.props.onSave(user);\n    };\n  }\n\n  getInitState() {\n    const {\n      user\n    } = this.props;\n    return user || {\n      UserName: '',\n      UserLoginId: '',\n      Password: '',\n      Email: '',\n      ContactNumber: '',\n      UserType: 1,\n      CustomerId: 0,\n      IsActive: 1,\n      updatePassword: true,\n      open: false\n    };\n  }\n\n  render() {\n    const {\n      open\n    } = this.state;\n    const {\n      UserName,\n      Email,\n      ContactNumber,\n      UserLoginId,\n      Password,\n      UserType,\n      CustomerId,\n      IsActive,\n      updatePassword\n    } = this.state;\n    const {\n      customers,\n      userTypes,\n      isEdit\n    } = this.props;\n    const {\n      user\n    } = this.context;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 7\n      }\n    }, isEdit ? /*#__PURE__*/React.createElement(IconButton, {\n      color: \"secondary\",\n      size: \"small\",\n      onClick: this.handleToggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Edit, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 13\n      }\n    })) : /*#__PURE__*/React.createElement(Fab, {\n      onClick: this.handleToggle,\n      color: \"secondary\",\n      disabled: user.UserType !== UserTypes.FASTEX_USER,\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Add, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Dialog, {\n      onClose: this.handleToggle,\n      \"aria-labelledby\": \"customized-dialog-title\",\n      open: open,\n      fullWidth: true,\n      disableBackdropClick: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(DialogTitle, {\n      id: \"customized-dialog-title\",\n      onClose: this.handleToggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }\n    }, isEdit ? 'Redigera användare' : 'Skapa användare'), /*#__PURE__*/React.createElement(DialogContent, {\n      dividers: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"name\",\n      label: \"Namn och efternamn\",\n      name: \"UserName\",\n      value: UserName,\n      onChange: this.handleChange,\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      id: \"email\",\n      label: \"Email\",\n      name: \"Email\",\n      value: Email,\n      onChange: this.handleChange,\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      id: \"contactNumber\",\n      label: \"Telefonnummer\",\n      name: \"ContactNumber\",\n      value: ContactNumber,\n      onChange: this.handleChange,\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      disabled: isEdit,\n      error: this.state.loginIdExist,\n      helperText: this.state.loginIdExist ? 'Detta användarnamn är upptaget. Vänligen välj ett annat.' : '',\n      id: \"loginId\",\n      label: \"Anv\\xE4ndarnamn\",\n      name: \"UserLoginId\",\n      value: UserLoginId,\n      onChange: e => {\n        this.handleLoginIdChange(e.target.name, e.target.value);\n      },\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 13\n      }\n    }), updatePassword && /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      id: \"password\",\n      label: \"L\\xF6senord\",\n      name: \"Password\",\n      type: \"password\",\n      value: Password,\n      onChange: this.handleChange,\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(InputLabel, {\n      htmlFor: \"userType\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 13\n      }\n    }, \"Anv\\xE4ndartyp\"), /*#__PURE__*/React.createElement(Select, {\n      name: \"UserType\",\n      disabled: user.UserType !== UserTypes.FASTEX_USER,\n      value: UserType,\n      onChange: this.handleChange,\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 13\n      }\n    }, userTypes.map(userType => /*#__PURE__*/React.createElement(MenuItem, {\n      key: userType.type,\n      value: userType.type,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 17\n      }\n    }, userType.name))), (UserType == UserTypes.CUSTOMER_USER || UserType == UserTypes.MOBILE_USER) && /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(InputLabel, {\n      htmlFor: \"customer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 17\n      }\n    }, \"Kund\"), /*#__PURE__*/React.createElement(Select, {\n      name: \"CustomerId\",\n      disabled: user.UserType !== UserTypes.FASTEX_USER,\n      onChange: this.handleChange,\n      value: CustomerId,\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 17\n      }\n    }, customers.map(customer => /*#__PURE__*/React.createElement(MenuItem, {\n      key: customer.CustomerId,\n      value: customer.CustomerId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 21\n      }\n    }, customer.CustomerName)))), /*#__PURE__*/React.createElement(FormControlLabel, {\n      control: /*#__PURE__*/React.createElement(Checkbox, {\n        checked: IsActive == 1,\n        onChange: this.handleCheckChange,\n        name: \"IsActive\",\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 17\n        }\n      }),\n      label: \"Aktiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 13\n      }\n    }), isEdit && /*#__PURE__*/React.createElement(FormControlLabel, {\n      control: /*#__PURE__*/React.createElement(Checkbox, {\n        checked: updatePassword,\n        onChange: this.handlePasswrodToggle,\n        name: \"UpdatedPassword\",\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 19\n        }\n      }),\n      label: \"\\xC4ndra l\\xF6senord\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(DialogActions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      disabled: !this.state.readyToSubmit,\n      onClick: this.handleSubmit,\n      color: \"secondary\",\n      variant: \"contained\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 13\n      }\n    }, isEdit ? 'Redigera' : 'Skapa'))));\n  }\n\n}\n_class.contextType = UserContext;","map":{"version":3,"sources":["/Users/ctkit/git/Pollux/Web/src/app/screens/User/Form.js"],"names":["React","Component","Fragment","withStyles","Button","Dialog","MuiDialogTitle","MuiDialogContent","MuiDialogActions","IconButton","CloseIcon","Typography","TextField","Select","InputLabel","MenuItem","Fab","Checkbox","FormControlLabel","Add","Edit","UserContext","UserTypes","api","debounce","styles","theme","root","margin","padding","spacing","closeButton","position","right","top","color","palette","grey","DialogTitle","props","children","classes","onClose","other","DialogContent","DialogActions","state","open","updatePassword","getInitState","handleCheckChange","event","setState","IsActive","target","checked","checkIfFormIsReady","handleChange","value","name","handleLoginIdChange","checkIfLoginIdExist","id","get","params","then","res","data","loginIdExist","catch","ex","console","log","handleToggle","handlePasswrodToggle","ready","UserName","trim","UserLoginId","Password","UserType","FASTEX_USER","CustomerId","readyToSubmit","handleSubmit","user","UserId","Email","ContactNumber","onSave","render","customers","userTypes","isEdit","context","e","map","userType","type","CUSTOMER_USER","MOBILE_USER","customer","CustomerName","contextType"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport {\n  TextField,\n  Select,\n  InputLabel,\n  MenuItem,\n  Fab,\n  Checkbox,\n  FormControlLabel,\n} from '@material-ui/core';\nimport { Add, Edit } from '@material-ui/icons';\nimport UserContext from '../../context';\nimport { UserTypes } from '../../utils/appConst';\nimport { api } from '../../helpers/apiHelper';\nimport debounce from 'lodash/debounce';\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant='h6'>{children}</Typography>\n      {onClose ? (\n        <IconButton\n          aria-label='close'\n          className={classes.closeButton}\n          onClick={onClose}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default class extends Component {\n  state = { open: false, updatePassword: false };\n  state = this.getInitState();\n\n  static contextType = UserContext;\n\n  getInitState() {\n    const { user } = this.props;\n\n    return (\n      user || {\n        UserName: '',\n        UserLoginId: '',\n        Password: '',\n        Email: '',\n        ContactNumber: '',\n        UserType: 1,\n        CustomerId: 0,\n        IsActive: 1,\n        updatePassword: true,\n        open: false,\n      }\n    );\n  }\n  handleCheckChange = (event) => {\n    this.setState({ IsActive: event.target.checked }, () => {\n      this.checkIfFormIsReady();\n    });\n  };\n  handleChange = ({ target: { value, name } }) => {\n    this.setState(\n      {\n        [name]: value,\n      },\n      () => {\n        this.checkIfFormIsReady();\n      }\n    );\n  };\n\n  handleLoginIdChange = (name, value) => {\n    this.setState(\n      {\n        [name]: value,\n      },\n      () => {\n        this.checkIfLoginIdExist(value);\n      }\n    );\n  };\n\n  checkIfLoginIdExist = debounce((id) => {\n    api\n      .get('user/user-by-login-Id', {\n        params: {\n          id: id,\n        },\n      })\n      .then((res) => {\n        if (res.data) {\n          this.setState({ loginIdExist: true });\n        } else {\n          this.setState({ loginIdExist: false });\n        }\n      })\n      .catch((ex) => {\n        console.log('error in api calling');\n      });\n  }, 500);\n\n  handleToggle = () => {\n    this.setState({ open: !this.state.open });\n  };\n\n  handlePasswrodToggle = () => {\n    this.setState({ updatePassword: !this.state.updatePassword }, () => {\n      this.checkIfFormIsReady();\n    });\n  };\n\n  checkIfFormIsReady = debounce(() => {\n    let ready =\n      this.state.UserName.trim() !== '' && this.state.UserLoginId.trim() !== '';\n\n    if (this.state.updatePassword)\n      ready = ready && this.state.Password && this.state.Password.trim() !== '';\n\n    if (this.state.UserType !== UserTypes.FASTEX_USER)\n      ready = ready && this.state.CustomerId;\n\n    this.setState({\n      readyToSubmit: ready,\n    });\n  }, 500);\n\n  handleSubmit = () => {\n    this.handleToggle();\n    const user = {\n      UserId: this.state.UserId,\n      UserName: this.state.UserName,\n      Email: this.state.Email,\n      ContactNumber: this.state.ContactNumber,\n      UserLoginId: this.state.UserLoginId,\n      UserType: this.state.UserType,\n      CustomerId: this.state.CustomerId,\n      IsActive: this.state.IsActive,\n    };\n    if (this.state.updatePassword) user.Password = this.state.Password;\n    this.props.onSave(user);\n  };\n\n  render() {\n    const { open } = this.state;\n    const {\n      UserName,\n      Email,\n      ContactNumber,\n      UserLoginId,\n      Password,\n      UserType,\n      CustomerId,\n      IsActive,\n      updatePassword,\n    } = this.state;\n    const { customers, userTypes, isEdit } = this.props;\n    const { user } = this.context;\n\n    return (\n      <div>\n        {isEdit ? (\n          <IconButton\n            color='secondary'\n            size='small'\n            onClick={this.handleToggle}\n          >\n            <Edit />\n          </IconButton>\n        ) : (\n          <Fab\n            onClick={this.handleToggle}\n            color='secondary'\n            disabled={user.UserType !== UserTypes.FASTEX_USER}\n            size='small'\n          >\n            <Add />\n          </Fab>\n        )}\n        <Dialog\n          onClose={this.handleToggle}\n          aria-labelledby='customized-dialog-title'\n          open={open}\n          fullWidth\n          disableBackdropClick\n        >\n          <DialogTitle id='customized-dialog-title' onClose={this.handleToggle}>\n            {isEdit ? 'Redigera användare' : 'Skapa användare'}\n          </DialogTitle>\n          <DialogContent dividers>\n            <TextField\n              id='name'\n              label='Namn och efternamn'\n              name='UserName'\n              value={UserName}\n              onChange={this.handleChange}\n              fullWidth\n            />\n            <br />\n            <TextField\n              id='email'\n              label='Email'\n              name='Email'\n              value={Email}\n              onChange={this.handleChange}\n              fullWidth\n            />\n            <TextField\n              id='contactNumber'\n              label='Telefonnummer'\n              name='ContactNumber'\n              value={ContactNumber}\n              onChange={this.handleChange}\n              fullWidth\n            />\n            <br />\n            <TextField\n              disabled={isEdit}\n              error={this.state.loginIdExist}\n              helperText={\n                this.state.loginIdExist\n                  ? 'Detta användarnamn är upptaget. Vänligen välj ett annat.'\n                  : ''\n              }\n              id='loginId'\n              label='Användarnamn'\n              name='UserLoginId'\n              value={UserLoginId}\n              onChange={(e) => {\n                this.handleLoginIdChange(e.target.name, e.target.value);\n              }}\n              fullWidth\n            />\n            {updatePassword && (\n              <Fragment>\n                <br />\n                <TextField\n                  id='password'\n                  label='Lösenord'\n                  name='Password'\n                  type='password'\n                  value={Password}\n                  onChange={this.handleChange}\n                  fullWidth\n                />\n              </Fragment>\n            )}\n            <br />\n            <InputLabel htmlFor='userType'>Användartyp</InputLabel>\n            <Select\n              name='UserType'\n              disabled={user.UserType !== UserTypes.FASTEX_USER}\n              value={UserType}\n              onChange={this.handleChange}\n              fullWidth\n            >\n              {userTypes.map((userType) => (\n                <MenuItem key={userType.type} value={userType.type}>\n                  {userType.name}\n                </MenuItem>\n              ))}\n            </Select>\n            {(UserType == UserTypes.CUSTOMER_USER ||\n              UserType == UserTypes.MOBILE_USER) && (\n              <Fragment>\n                <br />\n                <InputLabel htmlFor='customer'>Kund</InputLabel>\n                <Select\n                  name='CustomerId'\n                  disabled={user.UserType !== UserTypes.FASTEX_USER}\n                  onChange={this.handleChange}\n                  value={CustomerId}\n                  fullWidth\n                >\n                  {customers.map((customer) => (\n                    <MenuItem\n                      key={customer.CustomerId}\n                      value={customer.CustomerId}\n                    >\n                      {customer.CustomerName}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </Fragment>\n            )}\n\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={IsActive == 1}\n                  onChange={this.handleCheckChange}\n                  name='IsActive'\n                  color='primary'\n                />\n              }\n              label='Aktiv'\n            />\n            {isEdit && (\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    checked={updatePassword}\n                    onChange={this.handlePasswrodToggle}\n                    name='UpdatedPassword'\n                    color='primary'\n                  />\n                }\n                label='Ändra lösenord'\n              />\n            )}\n          </DialogContent>\n          <DialogActions>\n            <Button\n              disabled={!this.state.readyToSubmit}\n              onClick={this.handleSubmit}\n              color='secondary'\n              variant='contained'\n            >\n              {isEdit ? 'Redigera' : 'Skapa'}\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
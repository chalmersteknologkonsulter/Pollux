{"ast":null,"code":"var _jsxFileName = \"/Users/ctkit/git/Pollux/Web/src/app/screens/Seller/List.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport MaterialTable, { MTableToolbar } from 'material-table';\nimport { Chip, Button } from '@material-ui/core';\nimport { getSeller, createSeller, updateSeller, deleteSeller } from '../../api/sellerApi';\nimport CreationDialog from './Form';\nimport DeleteConfirmationDialog from '../../components/DeleteConfirmationDialog';\nexport default class SellerList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      sellers: []\n    };\n\n    this.getSellers = () => {\n      getSeller().then(data => {\n        this.setState({\n          sellers: data\n        });\n      });\n    };\n\n    this.onSaveHandler = data => {\n      let payLoad = { ...data\n      };\n      console.log('selller info:', data);\n\n      if (data.SellerId) {\n        updateSeller(payLoad).then(res => {\n          this.getSellers();\n        });\n      } else {\n        createSeller(payLoad).then(res => {\n          this.getSellers();\n        });\n      }\n    };\n\n    this.onDeleteConfirmation = ({\n      SellerId\n    }) => {\n      deleteSeller(SellerId).then(res => {\n        this.getSellers();\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getSellers();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(MaterialTable, {\n      title: \"Seller List\",\n      columns: [{\n        title: 'Name',\n        field: 'SellerName'\n      }, {\n        title: 'Designation',\n        field: 'SellerDesignation'\n      }, {\n        title: 'Email',\n        field: 'Email'\n      }],\n      data: this.state.sellers,\n      actions: [{\n        icon: 'add',\n        tooltip: 'Add User',\n        isFreeAction: true,\n        onClick: event => alert('You want to add a new row')\n      }, {\n        icon: 'save',\n        tooltip: 'Save User',\n        onClick: (event, rowData) => alert('You saved ' + rowData.name)\n      }, {\n        icon: 'delete',\n        tooltip: 'delete User',\n        onClick: (event, rowData) => this.onDeleteConfirmation(rowData)\n      }],\n      options: {\n        actionsColumnIndex: -1\n      },\n      components: {\n        Action: props => {\n          if (props.action.icon === 'add') {\n            return /*#__PURE__*/React.createElement(CreationDialog, {\n              onSave: this.onSaveHandler,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 17\n              }\n            });\n          }\n\n          if (props.action.icon === 'save') {\n            return /*#__PURE__*/React.createElement(CreationDialog, {\n              isEdit: true,\n              seller: props.data,\n              onSave: this.onSaveHandler,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 17\n              }\n            });\n          }\n\n          if (props.action.icon === 'delete') {\n            return /*#__PURE__*/React.createElement(DeleteConfirmationDialog, {\n              title: \"Delete Confirmation\",\n              message: \"Are you sure to delete the seller information\",\n              onConfirmation: event => props.action.onClick(event, props.data),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 17\n              }\n            });\n          } else return null;\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/ctkit/git/Pollux/Web/src/app/screens/Seller/List.js"],"names":["React","Component","ReactDOM","MaterialTable","MTableToolbar","Chip","Button","getSeller","createSeller","updateSeller","deleteSeller","CreationDialog","DeleteConfirmationDialog","SellerList","state","sellers","getSellers","then","data","setState","onSaveHandler","payLoad","console","log","SellerId","res","onDeleteConfirmation","componentDidMount","render","title","field","icon","tooltip","isFreeAction","onClick","event","alert","rowData","name","actionsColumnIndex","Action","props","action"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport MaterialTable, { MTableToolbar } from 'material-table';\nimport { Chip, Button } from '@material-ui/core';\nimport {\n  getSeller,\n  createSeller,\n  updateSeller,\n  deleteSeller,\n} from '../../api/sellerApi';\nimport CreationDialog from './Form';\nimport DeleteConfirmationDialog from '../../components/DeleteConfirmationDialog';\n\nexport default class SellerList extends Component {\n  state = {\n    sellers: [],\n  };\n  getSellers = () => {\n    getSeller().then((data) => {\n      this.setState({ sellers: data });\n    });\n  };\n\n  componentDidMount() {\n    this.getSellers();\n  }\n\n  onSaveHandler = (data) => {\n    let payLoad = {\n      ...data,\n    };\n    console.log('selller info:', data);\n    if (data.SellerId) {\n      updateSeller(payLoad).then((res) => {\n        this.getSellers();\n      });\n    } else {\n      createSeller(payLoad).then((res) => {\n        this.getSellers();\n      });\n    }\n  };\n\n  onDeleteConfirmation = ({ SellerId }) => {\n    deleteSeller(SellerId).then((res) => {\n      this.getSellers();\n    });\n  };\n\n  render() {\n    return (\n      <MaterialTable\n        title='Seller List'\n        columns={[\n          {\n            title: 'Name',\n            field: 'SellerName',\n          },\n          { title: 'Designation', field: 'SellerDesignation' },\n          { title: 'Email', field: 'Email' },\n        ]}\n        data={this.state.sellers}\n        actions={[\n          {\n            icon: 'add',\n            tooltip: 'Add User',\n            isFreeAction: true,\n            onClick: (event) => alert('You want to add a new row'),\n          },\n          {\n            icon: 'save',\n            tooltip: 'Save User',\n            onClick: (event, rowData) => alert('You saved ' + rowData.name),\n          },\n          {\n            icon: 'delete',\n            tooltip: 'delete User',\n            onClick: (event, rowData) => this.onDeleteConfirmation(rowData),\n          },\n        ]}\n        options={{\n          actionsColumnIndex: -1,\n        }}\n        components={{\n          Action: (props) => {\n            if (props.action.icon === 'add') {\n              return (\n                <CreationDialog onSave={this.onSaveHandler}></CreationDialog>\n              );\n            }\n            if (props.action.icon === 'save') {\n              return (\n                <CreationDialog\n                  isEdit={true}\n                  seller={props.data}\n                  onSave={this.onSaveHandler}\n                ></CreationDialog>\n              );\n            }\n            if (props.action.icon === 'delete') {\n              return (\n                <DeleteConfirmationDialog\n                  title='Delete Confirmation'\n                  message='Are you sure to delete the seller information'\n                  onConfirmation={(event) =>\n                    props.action.onClick(event, props.data)\n                  }\n                ></DeleteConfirmationDialog>\n              );\n            } else return null;\n          },\n        }}\n      />\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
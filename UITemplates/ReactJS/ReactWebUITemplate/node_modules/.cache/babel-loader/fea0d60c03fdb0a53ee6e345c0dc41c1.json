{"ast":null,"code":"var _class,\n    _temp,\n    _jsxFileName = \"/Users/ctkit/git/Pollux/Web/src/app/screens/Order/List.js\";\n\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport MaterialTable, { MTableToolbar } from 'material-table';\nimport { Chip, Button, Grid, FormControlLabel, Checkbox, withStyles, Typography } from '@material-ui/core'; // import { api } from '../../helpers/apiHelper';\n\nimport OrderDetails from './OrderDetails';\nimport DeleteConfirmationDialog from '../../components/DeleteConfirmationDialog';\nimport moment from 'moment';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardTimePicker, KeyboardDatePicker } from '@material-ui/pickers';\nimport UserContext from '../../context';\n\nconst styles = theme => ({\n  root: {},\n  gridContainer: {\n    display: 'flex',\n    alignItems: 'baseline',\n    paddingLeft: 30,\n    justifyContent: 'space-between'\n  },\n  checkboxControl: {\n    display: 'block'\n  }\n});\n\nexport default withStyles(styles)((_temp = _class = class OrderList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      orders: [],\n      customers: [],\n      sellers: [],\n      fromDate: moment(new Date()).subtract(1, 'days'),\n      toDate: moment(new Date()).add(1, 'days'),\n      myOrder: 0\n    };\n\n    this.getOrders = () => {\n      const {\n        user\n      } = this.context;\n      let payload = {\n        dateRange: {\n          fromDate: moment(this.state.fromDate).startOf('day').format('YYYY-MM-DD kk:mm:ss'),\n          toDate: moment(this.state.toDate).endOf('day').format('YYYY-MM-DD kk:mm:ss')\n        }\n      };\n\n      if (this.state.myOrder) {\n        payload.sellerId = user.UserId;\n      }\n\n      api.post('/orders-by-date-range', payload).then(res => {\n        this.setState({\n          orders: res.data\n        });\n      });\n    };\n\n    this.onSaveHandler = data => {\n      let payload = { ...data\n      };\n      console.log('payload:', data);\n      api.put('/orders', payload).then(res => {\n        this.getOrders();\n      });\n    };\n\n    this.handleFromDateChange = date => {\n      this.setState({\n        fromDate: date\n      });\n      console.log('momoment:', moment(date).format('DD-MM-YYYY'));\n    };\n\n    this.handleToDateChange = date => {\n      this.setState({\n        toDate: date\n      });\n      console.log('momoment:', moment(date).format('DD-MM-YYYY'));\n    };\n\n    this.handleCheckChange = event => {\n      this.setState({\n        myOrder: event.target.checked\n      });\n    };\n\n    this.onLoadClick = () => {\n      this.getOrders();\n    };\n\n    this.onDeleteConfirmation = ({\n      OrderId\n    }) => {\n      api.delete('/orders/', {\n        params: {\n          orderId: OrderId\n        }\n      }).then(response => this.getOrders());\n    };\n  }\n\n  componentDidMount() {\n    this.getOrders();\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/React.createElement(MaterialTable, {\n      title: \"Best\\xE4llningar\",\n      columns: [{\n        title: 'Kund',\n        field: 'CustomerName'\n      }, {\n        title: 'Användare',\n        field: 'UserName'\n      }, {\n        title: 'Datum',\n        field: 'CreationDate',\n        render: rowData => /*#__PURE__*/React.createElement(Typography, {\n          variant: \"body\",\n          gutterBottom: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 17\n          }\n        }, moment(rowData.CreationDate).format('YYYY-MM-DD  kk:mm:ss'))\n      }, {\n        title: 'Status',\n        field: 'Status',\n        lookup: {\n          1: 'Skapad',\n          2: 'Hanterad',\n          3: 'Raderad'\n        }\n      }],\n      data: this.state.orders,\n      actions: [{\n        icon: 'save',\n        tooltip: 'Save Customer',\n        onClick: (event, rowData) => alert('You saved ' + rowData.name)\n      }, {\n        icon: 'delete',\n        tooltip: 'delete Customer',\n        onClick: (event, rowData) => this.onDeleteConfirmation(rowData)\n      }],\n      options: {\n        pageSize: 20,\n        actionsColumnIndex: -1,\n        rowStyle: rowData => ({\n          backgroundColor: rowData.Status === 1 ? '#ff9100' : '#FFF'\n        })\n      },\n      components: {\n        Action: props => {\n          if (props.action.icon === 'save') {\n            return /*#__PURE__*/React.createElement(OrderDetails, {\n              isEdit: true,\n              customer: props.data,\n              data: props.data,\n              sellers: this.state.sellers,\n              onSave: this.onSaveHandler,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 19\n              }\n            });\n          }\n\n          if (props.action.icon === 'delete') {\n            return /*#__PURE__*/React.createElement(DeleteConfirmationDialog, {\n              title: \"Bekr\\xE4ftelse\",\n              message: \"\\xC4r du s\\xE4ker p\\xE5 att du vill radera best\\xE4llningen?\",\n              actionDisabled: props.data.Status == 2,\n              onConfirmation: event => props.action.onClick(event, props.data),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 19\n              }\n            });\n          } else return null;\n        },\n        Toolbar: props => /*#__PURE__*/React.createElement(\"div\", {\n          className: classes.root,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(MTableToolbar, Object.assign({}, props, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 17\n          }\n        })), /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n          utils: DateFnsUtils,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Grid, {\n          container: true,\n          item: true,\n          xs: 9,\n          className: classes.gridContainer,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(KeyboardDatePicker, {\n          disableToolbar: true,\n          variant: \"inline\",\n          format: \"yyyy-MM-dd\",\n          margin: \"normal\",\n          id: \"fromDate\",\n          label: \"Fr\\xE5n\",\n          value: this.state.fromDate,\n          onChange: this.handleFromDateChange,\n          KeyboardButtonProps: {\n            'aria-label': 'change date'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 21\n          }\n        }), /*#__PURE__*/React.createElement(KeyboardDatePicker, {\n          disableToolbar: true,\n          variant: \"inline\",\n          format: \"yyyy-MM-dd\",\n          margin: \"normal\",\n          id: \"toDate\",\n          label: \"Till\",\n          value: this.state.toDate,\n          onChange: this.handleToDateChange,\n          KeyboardButtonProps: {\n            'aria-label': 'change date'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 21\n          }\n        }), /*#__PURE__*/React.createElement(FormControlLabel, {\n          className: classes.checkboxControl,\n          control: /*#__PURE__*/React.createElement(Checkbox, {\n            checked: this.state.myOrder == 1,\n            onChange: this.handleCheckChange,\n            name: \"IsActive\",\n            color: \"primary\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 25\n            }\n          }),\n          label: \"Mina kunder\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 21\n          }\n        }), /*#__PURE__*/React.createElement(Button, {\n          color: \"secondary\",\n          variant: \"contained\",\n          onClick: this.onLoadClick,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 21\n          }\n        }, \"H\\xE4mta\"))))\n      },\n      localization: {\n        body: {\n          emptyDataSourceMessage: 'Ingen information att visa'\n        },\n        toolbar: {\n          searchTooltip: 'Sök',\n          searchPlaceholder: 'Sök'\n        },\n        pagination: {\n          labelRowsSelect: 'Rader',\n          labelDisplayedRows: '{from}-{to} av {count}'\n        },\n        header: {\n          actions: 'Aktion'\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }\n    });\n  }\n\n}, _class.contextType = UserContext, _temp));","map":{"version":3,"sources":["/Users/ctkit/git/Pollux/Web/src/app/screens/Order/List.js"],"names":["React","Component","ReactDOM","MaterialTable","MTableToolbar","Chip","Button","Grid","FormControlLabel","Checkbox","withStyles","Typography","OrderDetails","DeleteConfirmationDialog","moment","DateFnsUtils","MuiPickersUtilsProvider","KeyboardTimePicker","KeyboardDatePicker","UserContext","styles","theme","root","gridContainer","display","alignItems","paddingLeft","justifyContent","checkboxControl","OrderList","state","orders","customers","sellers","fromDate","Date","subtract","toDate","add","myOrder","getOrders","user","context","payload","dateRange","startOf","format","endOf","sellerId","UserId","api","post","then","res","setState","data","onSaveHandler","console","log","put","handleFromDateChange","date","handleToDateChange","handleCheckChange","event","target","checked","onLoadClick","onDeleteConfirmation","OrderId","delete","params","orderId","response","componentDidMount","render","classes","props","title","field","rowData","CreationDate","lookup","icon","tooltip","onClick","alert","name","pageSize","actionsColumnIndex","rowStyle","backgroundColor","Status","Action","action","Toolbar","body","emptyDataSourceMessage","toolbar","searchTooltip","searchPlaceholder","pagination","labelRowsSelect","labelDisplayedRows","header","actions","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport MaterialTable, { MTableToolbar } from 'material-table';\nimport {\n  Chip,\n  Button,\n  Grid,\n  FormControlLabel,\n  Checkbox,\n  withStyles,\n  Typography,\n} from '@material-ui/core';\n// import { api } from '../../helpers/apiHelper';\nimport OrderDetails from './OrderDetails';\nimport DeleteConfirmationDialog from '../../components/DeleteConfirmationDialog';\nimport moment from 'moment';\n\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\n\nimport UserContext from '../../context';\n\nconst styles = (theme) => ({\n  root: {},\n  gridContainer: {\n    display: 'flex',\n    alignItems: 'baseline',\n    paddingLeft: 30,\n    justifyContent: 'space-between',\n  },\n  checkboxControl: {\n    display: 'block',\n  },\n});\n\nexport default withStyles(styles)(\n  class OrderList extends Component {\n    state = {\n      orders: [],\n      customers: [],\n      sellers: [],\n      fromDate: moment(new Date()).subtract(1, 'days'),\n      toDate: moment(new Date()).add(1, 'days'),\n      myOrder: 0,\n    };\n    static contextType = UserContext;\n\n    getOrders = () => {\n      const { user } = this.context;\n      let payload = {\n        dateRange: {\n          fromDate: moment(this.state.fromDate)\n            .startOf('day')\n            .format('YYYY-MM-DD kk:mm:ss'),\n          toDate: moment(this.state.toDate)\n            .endOf('day')\n            .format('YYYY-MM-DD kk:mm:ss'),\n        },\n      };\n      if (this.state.myOrder) {\n        payload.sellerId = user.UserId;\n      }\n      api.post('/orders-by-date-range', payload).then((res) => {\n        this.setState({ orders: res.data });\n      });\n    };\n\n    componentDidMount() {\n      this.getOrders();\n    }\n\n    onSaveHandler = (data) => {\n      let payload = {\n        ...data,\n      };\n      console.log('payload:', data);\n      api.put('/orders', payload).then((res) => {\n        this.getOrders();\n      });\n    };\n\n    handleFromDateChange = (date) => {\n      this.setState({ fromDate: date });\n      console.log('momoment:', moment(date).format('DD-MM-YYYY'));\n    };\n\n    handleToDateChange = (date) => {\n      this.setState({ toDate: date });\n      console.log('momoment:', moment(date).format('DD-MM-YYYY'));\n    };\n\n    handleCheckChange = (event) => {\n      this.setState({ myOrder: event.target.checked });\n    };\n    onLoadClick = () => {\n      this.getOrders();\n    };\n\n    onDeleteConfirmation = ({ OrderId }) => {\n      api\n        .delete('/orders/', {\n          params: {\n            orderId: OrderId,\n          },\n        })\n        .then((response) => this.getOrders());\n    };\n\n    render() {\n      const { classes } = this.props;\n      return (\n        <MaterialTable\n          title='Beställningar'\n          columns={[\n            {\n              title: 'Kund',\n              field: 'CustomerName',\n            },\n            { title: 'Användare', field: 'UserName' },\n            {\n              title: 'Datum',\n              field: 'CreationDate',\n              render: (rowData) => (\n                <Typography variant='body' gutterBottom>\n                  {moment(rowData.CreationDate).format('YYYY-MM-DD  kk:mm:ss')}\n                </Typography>\n              ),\n            },\n            {\n              title: 'Status',\n              field: 'Status',\n              lookup: { 1: 'Skapad', 2: 'Hanterad', 3: 'Raderad' },\n            },\n          ]}\n          data={this.state.orders}\n          actions={[\n            {\n              icon: 'save',\n              tooltip: 'Save Customer',\n              onClick: (event, rowData) => alert('You saved ' + rowData.name),\n            },\n            {\n              icon: 'delete',\n              tooltip: 'delete Customer',\n              onClick: (event, rowData) => this.onDeleteConfirmation(rowData),\n            },\n          ]}\n          options={{\n            pageSize: 20,\n            actionsColumnIndex: -1,\n            rowStyle: (rowData) => ({\n              backgroundColor: rowData.Status === 1 ? '#ff9100' : '#FFF',\n            }),\n          }}\n          components={{\n            Action: (props) => {\n              if (props.action.icon === 'save') {\n                return (\n                  <OrderDetails\n                    isEdit={true}\n                    customer={props.data}\n                    data={props.data}\n                    sellers={this.state.sellers}\n                    onSave={this.onSaveHandler}\n                  ></OrderDetails>\n                );\n              }\n              if (props.action.icon === 'delete') {\n                return (\n                  <DeleteConfirmationDialog\n                    title='Bekräftelse'\n                    message='Är du säker på att du vill radera beställningen?'\n                    actionDisabled={props.data.Status == 2}\n                    onConfirmation={(event) =>\n                      props.action.onClick(event, props.data)\n                    }\n                  ></DeleteConfirmationDialog>\n                );\n              } else return null;\n            },\n\n            Toolbar: (props) => (\n              <div className={classes.root}>\n                <MTableToolbar {...props} />\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                  <Grid container item xs={9} className={classes.gridContainer}>\n                    <KeyboardDatePicker\n                      disableToolbar\n                      variant='inline'\n                      format='yyyy-MM-dd'\n                      margin='normal'\n                      id='fromDate'\n                      label='Från'\n                      value={this.state.fromDate}\n                      onChange={this.handleFromDateChange}\n                      KeyboardButtonProps={{\n                        'aria-label': 'change date',\n                      }}\n                    />\n                    <KeyboardDatePicker\n                      disableToolbar\n                      variant='inline'\n                      format='yyyy-MM-dd'\n                      margin='normal'\n                      id='toDate'\n                      label='Till'\n                      value={this.state.toDate}\n                      onChange={this.handleToDateChange}\n                      KeyboardButtonProps={{\n                        'aria-label': 'change date',\n                      }}\n                    />\n                    <FormControlLabel\n                      className={classes.checkboxControl}\n                      control={\n                        <Checkbox\n                          checked={this.state.myOrder == 1}\n                          onChange={this.handleCheckChange}\n                          name='IsActive'\n                          color='primary'\n                        />\n                      }\n                      label='Mina kunder'\n                    />\n                    <Button\n                      color='secondary'\n                      variant='contained'\n                      onClick={this.onLoadClick}\n                    >\n                      Hämta\n                    </Button>\n                  </Grid>\n                </MuiPickersUtilsProvider>\n              </div>\n            ),\n          }}\n          localization={{\n            body: {\n              emptyDataSourceMessage: 'Ingen information att visa',\n            },\n            toolbar: {\n              searchTooltip: 'Sök',\n              searchPlaceholder: 'Sök',\n            },\n            pagination: {\n              labelRowsSelect: 'Rader',\n              labelDisplayedRows: '{from}-{to} av {count}',\n            },\n            header: {\n              actions: 'Aktion',\n            },\n          }}\n        />\n      );\n    }\n  }\n);\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _class,\n    _temp,\n    _jsxFileName = \"/Users/ctkit/git/Pollux/Web/src/app/screens/Withdraw/List.js\";\n\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport MaterialTable, { MTableToolbar } from 'material-table';\nimport { Chip, Button, Grid, FormControlLabel, Checkbox, withStyles, Typography } from '@material-ui/core'; // import { api } from '../../helpers/apiHelper';\n\nimport moment from 'moment';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardTimePicker, KeyboardDatePicker } from '@material-ui/pickers';\nimport UserContext from '../../context';\n\nconst styles = theme => ({\n  root: {},\n  gridContainer: {\n    display: 'flex',\n    alignItems: 'baseline',\n    paddingLeft: 30,\n    justifyContent: 'space-between'\n  },\n  checkboxControl: {\n    display: 'block'\n  }\n});\n\nexport default withStyles(styles)((_temp = _class = class WithdrawalList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      withdraws: [],\n      fromDate: moment(new Date()).subtract(1, 'days'),\n      toDate: moment(new Date()).add(1, 'days'),\n      myOrder: 0\n    };\n\n    this.getWithdraws = () => {\n      const {\n        user\n      } = this.context;\n      let payload = {\n        dateRange: {\n          fromDate: moment(this.state.fromDate).format('YYYY-MM-DD'),\n          toDate: moment(this.state.toDate).format('YYYY-MM-DD')\n        }\n      };\n\n      if (this.state.myOrder) {\n        payload.sellerId = user.UserId;\n      }\n\n      api.post('/withdrawals-by-date-range', payload).then(res => {\n        console.log('withdrawals:', res.data);\n        this.setState({\n          withdraws: res.data\n        });\n      });\n    };\n\n    this.handleFromDateChange = date => {\n      this.setState({\n        fromDate: date\n      });\n      console.log('momoment:', moment(date).format('DD-MM-YYYY'));\n    };\n\n    this.handleToDateChange = date => {\n      this.setState({\n        toDate: date\n      });\n      console.log('momoment:', moment(date).format('DD-MM-YYYY'));\n    };\n\n    this.handleCheckChange = event => {\n      this.setState({\n        myOrder: event.target.checked\n      });\n    };\n\n    this.onLoadClick = () => {\n      this.getWithdraws();\n    };\n  }\n\n  componentDidMount() {\n    this.getWithdraws();\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/React.createElement(MaterialTable, {\n      title: \"Utplock\",\n      columns: [{\n        title: 'Kund',\n        field: 'CustomerName'\n      }, {\n        title: 'Användare',\n        field: 'UserName'\n      }, {\n        title: 'Datum',\n        field: 'CreationDate',\n        render: rowData => /*#__PURE__*/React.createElement(Typography, {\n          variant: \"body\",\n          gutterBottom: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 17\n          }\n        }, moment(rowData.CreationDate).format('YYYY-MM-DD  kk:mm:ss'))\n      }, {\n        title: 'Märkning',\n        field: 'ProjectCode'\n      }, {\n        title: 'Artikelnummer',\n        field: 'ArticleNumber'\n      }, {\n        title: 'Beskrivning',\n        field: 'Description'\n      }, {\n        title: 'Kvantitet',\n        field: 'Quantity'\n      }],\n      data: this.state.withdraws,\n      options: {\n        actionsColumnIndex: -1,\n        pageSize: 20\n      },\n      components: {\n        Toolbar: props => /*#__PURE__*/React.createElement(\"div\", {\n          className: classes.root,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(MTableToolbar, Object.assign({}, props, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 17\n          }\n        })), /*#__PURE__*/React.createElement(Grid, {\n          container: true,\n          item: true,\n          xs: 9,\n          className: classes.gridContainer,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n          utils: DateFnsUtils,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(KeyboardDatePicker, {\n          disableToolbar: true,\n          variant: \"inline\",\n          format: \"yyyy-MM-dd\",\n          margin: \"normal\",\n          id: \"fromDate\",\n          label: \"Fr\\xE5n\",\n          value: this.state.fromDate,\n          onChange: this.handleFromDateChange,\n          KeyboardButtonProps: {\n            'aria-label': 'change date'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 21\n          }\n        }), /*#__PURE__*/React.createElement(KeyboardDatePicker, {\n          disableToolbar: true,\n          variant: \"inline\",\n          format: \"yyyy-MM-dd\",\n          margin: \"normal\",\n          id: \"toDate\",\n          label: \"Till\",\n          value: this.state.toDate,\n          onChange: this.handleToDateChange,\n          KeyboardButtonProps: {\n            'aria-label': 'change date'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 21\n          }\n        })), /*#__PURE__*/React.createElement(FormControlLabel, {\n          className: classes.checkboxControl,\n          control: /*#__PURE__*/React.createElement(Checkbox, {\n            checked: this.state.myOrder == 1,\n            onChange: this.handleCheckChange,\n            name: \"IsActive\",\n            color: \"primary\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 23\n            }\n          }),\n          label: \"Mina kunder\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 19\n          }\n        }), /*#__PURE__*/React.createElement(Button, {\n          color: \"secondary\",\n          variant: \"contained\",\n          onClick: this.onLoadClick,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 19\n          }\n        }, \"H\\xE4mta\")))\n      },\n      localization: {\n        body: {\n          emptyDataSourceMessage: 'Ingen information att visa'\n        },\n        toolbar: {\n          searchTooltip: 'Sök',\n          searchPlaceholder: 'Sök'\n        },\n        pagination: {\n          labelRowsSelect: 'Rader',\n          labelDisplayedRows: '{from}-{to} av {count}'\n        },\n        header: {\n          actions: 'Aktion'\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    });\n  }\n\n}, _class.contextType = UserContext, _temp));","map":{"version":3,"sources":["/Users/ctkit/git/Pollux/Web/src/app/screens/Withdraw/List.js"],"names":["React","Component","ReactDOM","MaterialTable","MTableToolbar","Chip","Button","Grid","FormControlLabel","Checkbox","withStyles","Typography","moment","DateFnsUtils","MuiPickersUtilsProvider","KeyboardTimePicker","KeyboardDatePicker","UserContext","styles","theme","root","gridContainer","display","alignItems","paddingLeft","justifyContent","checkboxControl","WithdrawalList","state","withdraws","fromDate","Date","subtract","toDate","add","myOrder","getWithdraws","user","context","payload","dateRange","format","sellerId","UserId","api","post","then","res","console","log","data","setState","handleFromDateChange","date","handleToDateChange","handleCheckChange","event","target","checked","onLoadClick","componentDidMount","render","classes","props","title","field","rowData","CreationDate","actionsColumnIndex","pageSize","Toolbar","body","emptyDataSourceMessage","toolbar","searchTooltip","searchPlaceholder","pagination","labelRowsSelect","labelDisplayedRows","header","actions","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport MaterialTable, { MTableToolbar } from 'material-table';\nimport {\n  Chip,\n  Button,\n  Grid,\n  FormControlLabel,\n  Checkbox,\n  withStyles,\n  Typography,\n} from '@material-ui/core';\n// import { api } from '../../helpers/apiHelper';\nimport moment from 'moment';\n\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\n\nimport UserContext from '../../context';\n\nconst styles = (theme) => ({\n  root: {},\n  gridContainer: {\n    display: 'flex',\n    alignItems: 'baseline',\n    paddingLeft: 30,\n    justifyContent: 'space-between',\n  },\n  checkboxControl: {\n    display: 'block',\n  },\n});\n\nexport default withStyles(styles)(\n  class WithdrawalList extends Component {\n    state = {\n      withdraws: [],\n      fromDate: moment(new Date()).subtract(1, 'days'),\n      toDate: moment(new Date()).add(1, 'days'),\n      myOrder: 0,\n    };\n    static contextType = UserContext;\n\n    getWithdraws = () => {\n      const { user } = this.context;\n\n      let payload = {\n        dateRange: {\n          fromDate: moment(this.state.fromDate).format('YYYY-MM-DD'),\n          toDate: moment(this.state.toDate).format('YYYY-MM-DD'),\n        },\n      };\n\n      if (this.state.myOrder) {\n        payload.sellerId = user.UserId;\n      }\n\n      api.post('/withdrawals-by-date-range', payload).then((res) => {\n        console.log('withdrawals:', res.data);\n        this.setState({ withdraws: res.data });\n      });\n    };\n\n    componentDidMount() {\n      this.getWithdraws();\n    }\n\n    handleFromDateChange = (date) => {\n      this.setState({ fromDate: date });\n      console.log('momoment:', moment(date).format('DD-MM-YYYY'));\n    };\n\n    handleToDateChange = (date) => {\n      this.setState({ toDate: date });\n      console.log('momoment:', moment(date).format('DD-MM-YYYY'));\n    };\n\n    handleCheckChange = (event) => {\n      this.setState({ myOrder: event.target.checked });\n    };\n\n    onLoadClick = () => {\n      this.getWithdraws();\n    };\n\n    render() {\n      const { classes } = this.props;\n      return (\n        <MaterialTable\n          title='Utplock'\n          columns={[\n            {\n              title: 'Kund',\n              field: 'CustomerName',\n            },\n            { title: 'Användare', field: 'UserName' },\n            {\n              title: 'Datum',\n              field: 'CreationDate',\n              render: (rowData) => (\n                <Typography variant='body' gutterBottom>\n                  {moment(rowData.CreationDate).format('YYYY-MM-DD  kk:mm:ss')}\n                </Typography>\n              ),\n            },\n            {\n              title: 'Märkning',\n              field: 'ProjectCode',\n            },\n            {\n              title: 'Artikelnummer',\n              field: 'ArticleNumber',\n            },\n            {\n              title: 'Beskrivning',\n              field: 'Description',\n            },\n            {\n              title: 'Kvantitet',\n              field: 'Quantity',\n            },\n          ]}\n          data={this.state.withdraws}\n          options={{\n            actionsColumnIndex: -1,\n            pageSize: 20,\n          }}\n          components={{\n            Toolbar: (props) => (\n              <div className={classes.root}>\n                <MTableToolbar {...props} />\n                <Grid container item xs={9} className={classes.gridContainer}>\n                  <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                    <KeyboardDatePicker\n                      disableToolbar\n                      variant='inline'\n                      format='yyyy-MM-dd'\n                      margin='normal'\n                      id='fromDate'\n                      label='Från'\n                      value={this.state.fromDate}\n                      onChange={this.handleFromDateChange}\n                      KeyboardButtonProps={{\n                        'aria-label': 'change date',\n                      }}\n                    />\n                    <KeyboardDatePicker\n                      disableToolbar\n                      variant='inline'\n                      format='yyyy-MM-dd'\n                      margin='normal'\n                      id='toDate'\n                      label='Till'\n                      value={this.state.toDate}\n                      onChange={this.handleToDateChange}\n                      KeyboardButtonProps={{\n                        'aria-label': 'change date',\n                      }}\n                    />\n                  </MuiPickersUtilsProvider>\n                  <FormControlLabel\n                    className={classes.checkboxControl}\n                    control={\n                      <Checkbox\n                        checked={this.state.myOrder == 1}\n                        onChange={this.handleCheckChange}\n                        name='IsActive'\n                        color='primary'\n                      />\n                    }\n                    label='Mina kunder'\n                  />\n                  <Button\n                    color='secondary'\n                    variant='contained'\n                    onClick={this.onLoadClick}\n                  >\n                    Hämta\n                  </Button>\n                </Grid>\n              </div>\n            ),\n          }}\n          localization={{\n            body: {\n              emptyDataSourceMessage: 'Ingen information att visa',\n            },\n            toolbar: {\n              searchTooltip: 'Sök',\n              searchPlaceholder: 'Sök',\n            },\n            pagination: {\n              labelRowsSelect: 'Rader',\n              labelDisplayedRows: '{from}-{to} av {count}',\n            },\n            header: {\n              actions: 'Aktion',\n            },\n          }}\n        />\n      );\n    }\n  }\n);\n"]},"metadata":{},"sourceType":"module"}
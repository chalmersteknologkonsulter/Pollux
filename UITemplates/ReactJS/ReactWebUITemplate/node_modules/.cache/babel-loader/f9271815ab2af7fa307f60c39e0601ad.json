{"ast":null,"code":"var _jsxFileName = \"/Users/ctkit/git/Pollux/Web/src/app/screens/Customer/Form.js\";\nimport React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport { TextField, Select, InputLabel, MenuItem, Fab } from '@material-ui/core';\nimport { Add, Edit } from '@material-ui/icons';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2)\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500]\n  }\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const {\n    children,\n    classes,\n    onClose,\n    ...other\n  } = props;\n  return /*#__PURE__*/React.createElement(MuiDialogTitle, Object.assign({\n    disableTypography: true,\n    className: classes.root\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, children), onClose ? /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"close\",\n    className: classes.closeButton,\n    onClick: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CloseIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  })) : null);\n});\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2)\n  }\n}))(MuiDialogContent);\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1)\n  }\n}))(MuiDialogActions);\nexport default class extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      open: false\n    };\n    this.state = this.getInitState();\n\n    this.handleChange = ({\n      target: {\n        value,\n        name\n      }\n    }) => this.setState({\n      [name]: value\n    });\n\n    this.handleToggle = () => {\n      this.setState({\n        open: !this.state.open\n      });\n    };\n\n    this.handleSubmit = () => {\n      this.handleToggle();\n      const customer = {\n        CustomerId: this.state.CustomerId,\n        CustomerName: this.state.CustomerName,\n        BusinessAddress: this.state.BusinessAddress,\n        SellerId: this.state.SellerId\n      };\n      this.props.onSave(customer);\n    };\n  }\n\n  getInitState() {\n    const {\n      seller,\n      customer\n    } = this.props;\n    return customer || {\n      CustomerName: '',\n      BusinessAddress: '',\n      SellerId: ''\n    };\n  }\n\n  render() {\n    const {\n      open\n    } = this.state;\n    const {\n      CustomerName,\n      BusinessAddress,\n      SellerId\n    } = this.state;\n    const {\n      isEdit,\n      sellers\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 7\n      }\n    }, isEdit ? /*#__PURE__*/React.createElement(IconButton, {\n      color: \"secondary\",\n      size: \"small\",\n      onClick: this.handleToggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Edit, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    })) : /*#__PURE__*/React.createElement(Fab, {\n      onClick: this.handleToggle,\n      color: \"secondary\",\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Add, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Dialog, {\n      onClose: this.handleToggle,\n      \"aria-labelledby\": \"customized-dialog-title\",\n      open: open,\n      fullWidth: true,\n      disableBackdropClick: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(DialogTitle, {\n      id: \"customized-dialog-title\",\n      onClose: this.handleToggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }\n    }, isEdit ? 'Redigera kund' : 'Skapa kund'), /*#__PURE__*/React.createElement(DialogContent, {\n      dividers: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"name\",\n      label: \"Namn\",\n      name: \"CustomerName\",\n      value: CustomerName,\n      onChange: this.handleChange,\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      id: \"businessAddress\",\n      label: \"F\\xF6retagsadress\",\n      name: \"BusinessAddress\",\n      value: BusinessAddress,\n      onChange: this.handleChange,\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(InputLabel, {\n      htmlFor: \"Seller\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 15\n      }\n    }, \"S\\xE4ljkontakt\"), /*#__PURE__*/React.createElement(Select, {\n      name: \"SellerId\",\n      onChange: this.handleChange,\n      value: SellerId,\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 15\n      }\n    }, sellers.map(seller => /*#__PURE__*/React.createElement(MenuItem, {\n      key: seller.SellerId,\n      value: seller.SellerId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 19\n      }\n    }, seller.SellerName)))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(DialogActions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: this.handleSubmit,\n      color: \"secondary\",\n      variant: \"contained\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 13\n      }\n    }, isEdit ? 'Redigera' : 'Skapa'))));\n  }\n\n}","map":{"version":3,"sources":["/Users/ctkit/git/Pollux/Web/src/app/screens/Customer/Form.js"],"names":["React","Component","withStyles","Button","Dialog","MuiDialogTitle","MuiDialogContent","MuiDialogActions","IconButton","CloseIcon","Typography","TextField","Select","InputLabel","MenuItem","Fab","Add","Edit","styles","theme","root","margin","padding","spacing","closeButton","position","right","top","color","palette","grey","DialogTitle","props","children","classes","onClose","other","DialogContent","DialogActions","state","open","getInitState","handleChange","target","value","name","setState","handleToggle","handleSubmit","customer","CustomerId","CustomerName","BusinessAddress","SellerId","onSave","seller","render","isEdit","sellers","map","SellerName"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport {\n  TextField,\n  Select,\n  InputLabel,\n  MenuItem,\n  Fab,\n} from '@material-ui/core';\nimport { Add, Edit } from '@material-ui/icons';\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant='h6'>{children}</Typography>\n      {onClose ? (\n        <IconButton\n          aria-label='close'\n          className={classes.closeButton}\n          onClick={onClose}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default class extends Component {\n  state = { open: false };\n  state = this.getInitState();\n\n  getInitState() {\n    const { seller, customer } = this.props;\n    return (\n      customer || {\n        CustomerName: '',\n        BusinessAddress: '',\n        SellerId: '',\n      }\n    );\n  }\n\n  handleChange = ({ target: { value, name } }) =>\n    this.setState({\n      [name]: value,\n    });\n\n  handleToggle = () => {\n    this.setState({ open: !this.state.open });\n  };\n\n  handleSubmit = () => {\n    this.handleToggle();\n    const customer = {\n      CustomerId: this.state.CustomerId,\n      CustomerName: this.state.CustomerName,\n      BusinessAddress: this.state.BusinessAddress,\n      SellerId: this.state.SellerId,\n    };\n    this.props.onSave(customer);\n  };\n\n  render() {\n    const { open } = this.state;\n    const { CustomerName, BusinessAddress, SellerId } = this.state;\n    const { isEdit, sellers } = this.props;\n    return (\n      <div>\n        {isEdit ? (\n          <IconButton\n            color='secondary'\n            size='small'\n            onClick={this.handleToggle}\n          >\n            <Edit />\n          </IconButton>\n        ) : (\n          <Fab onClick={this.handleToggle} color='secondary' size='small'>\n            <Add />\n          </Fab>\n        )}\n        <Dialog\n          onClose={this.handleToggle}\n          aria-labelledby='customized-dialog-title'\n          open={open}\n          fullWidth\n          disableBackdropClick\n        >\n          <DialogTitle id='customized-dialog-title' onClose={this.handleToggle}>\n            {isEdit ? 'Redigera kund' : 'Skapa kund'}\n          </DialogTitle>\n          <DialogContent dividers>\n            <form>\n              <TextField\n                id='name'\n                label='Namn'\n                name='CustomerName'\n                value={CustomerName}\n                onChange={this.handleChange}\n                fullWidth\n              />\n              <br />\n              <TextField\n                id='businessAddress'\n                label='Företagsadress'\n                name='BusinessAddress'\n                value={BusinessAddress}\n                onChange={this.handleChange}\n                fullWidth\n              />\n              <br />\n              <br />\n              <InputLabel htmlFor='Seller'>Säljkontakt</InputLabel>\n              <Select\n                name='SellerId'\n                onChange={this.handleChange}\n                value={SellerId}\n                fullWidth\n              >\n                {sellers.map((seller) => (\n                  <MenuItem key={seller.SellerId} value={seller.SellerId}>\n                    {seller.SellerName}\n                  </MenuItem>\n                ))}\n              </Select>\n            </form>\n            <br />\n          </DialogContent>\n          <DialogActions>\n            <Button\n              onClick={this.handleSubmit}\n              color='secondary'\n              variant='contained'\n            >\n              {isEdit ? 'Redigera' : 'Skapa'}\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
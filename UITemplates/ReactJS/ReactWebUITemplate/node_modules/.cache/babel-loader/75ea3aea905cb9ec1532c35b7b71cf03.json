{"ast":null,"code":"import axios from 'axios';\nimport { toast } from 'react-toastify';\nimport { Endpoints } from '../utils/apiConst';\nimport Cookie from 'js-cookie';\n\n/** Setup an Axios instance */\nexport const api = axios.create({\n  baseURL: Endpoints.API_BASE_URL,\n  timeout: 1000\n});\napi.interceptors.request.use(function (config) {\n  // config.headers.Authorization = `Bearer ${token}`;\n  const token = Cookie.get('auth-token');\n  config.headers.Authorization = token;\n  return config;\n});\napi.interceptors.response.use(null, ex => {\n  let errrorMessage = 'Oops, something is wrong! Try again.';\n\n  if (ex.response) {\n    const errorData = ex.response.data;\n\n    if (errorData.errors && errorData.errors.length) {\n      // Only show first error from the list of errors\n      errrorMessage = errorData.errors[0];\n    } else if (errorData.fault) {\n      errrorMessage = errorData.fault.faultstring;\n    }\n  } else {\n    toast.error(errrorMessage);\n  }\n\n  return Promise.reject(ex);\n});","map":{"version":3,"sources":["/Users/ctkit/git/Pollux/Web/src/app/helpers/apiHelper.js"],"names":["axios","toast","Endpoints","Cookie","api","create","baseURL","API_BASE_URL","timeout","interceptors","request","use","config","token","get","headers","Authorization","response","ex","errrorMessage","errorData","data","errors","length","fault","faultstring","error","Promise","reject"],"mappings":"AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,OAAOC,MAAP,MAAmB,WAAnB;;AAIA;AACA,OAAO,MAAMC,GAAG,GAAGJ,KAAK,CAACK,MAAN,CAAa;AAC9BC,EAAAA,OAAO,EAAEJ,SAAS,CAACK,YADW;AAE9BC,EAAAA,OAAO,EAAE;AAFqB,CAAb,CAAZ;AAKPJ,GAAG,CAACK,YAAJ,CAAiBC,OAAjB,CAAyBC,GAAzB,CAA6B,UAAUC,MAAV,EAAkB;AAC7C;AACA,QAAMC,KAAK,GAAGV,MAAM,CAACW,GAAP,CAAW,YAAX,CAAd;AACAF,EAAAA,MAAM,CAACG,OAAP,CAAeC,aAAf,GAA+BH,KAA/B;AACA,SAAOD,MAAP;AACD,CALD;AAOAR,GAAG,CAACK,YAAJ,CAAiBQ,QAAjB,CAA0BN,GAA1B,CAA8B,IAA9B,EAAqCO,EAAD,IAAQ;AAC1C,MAAIC,aAAa,GAAG,sCAApB;;AACA,MAAID,EAAE,CAACD,QAAP,EAAiB;AACf,UAAMG,SAAS,GAAGF,EAAE,CAACD,QAAH,CAAYI,IAA9B;;AACA,QAAID,SAAS,CAACE,MAAV,IAAoBF,SAAS,CAACE,MAAV,CAAiBC,MAAzC,EAAiD;AAC/C;AACAJ,MAAAA,aAAa,GAAGC,SAAS,CAACE,MAAV,CAAiB,CAAjB,CAAhB;AACD,KAHD,MAGO,IAAIF,SAAS,CAACI,KAAd,EAAqB;AAC1BL,MAAAA,aAAa,GAAGC,SAAS,CAACI,KAAV,CAAgBC,WAAhC;AACD;AACF,GARD,MAQO;AACLxB,IAAAA,KAAK,CAACyB,KAAN,CAAYP,aAAZ;AACD;;AAED,SAAOQ,OAAO,CAACC,MAAR,CAAeV,EAAf,CAAP;AACD,CAfD","sourcesContent":["// @flow\n\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport { Endpoints } from '../utils/apiConst';\nimport Cookie from 'js-cookie';\nexport type Token = {\n  token: string,\n};\n/** Setup an Axios instance */\nexport const api = axios.create({\n  baseURL: Endpoints.API_BASE_URL,\n  timeout: 1000,\n});\n\napi.interceptors.request.use(function (config) {\n  // config.headers.Authorization = `Bearer ${token}`;\n  const token = Cookie.get('auth-token');\n  config.headers.Authorization = token;\n  return config;\n});\n\napi.interceptors.response.use(null, (ex) => {\n  let errrorMessage = 'Oops, something is wrong! Try again.';\n  if (ex.response) {\n    const errorData = ex.response.data;\n    if (errorData.errors && errorData.errors.length) {\n      // Only show first error from the list of errors\n      errrorMessage = errorData.errors[0];\n    } else if (errorData.fault) {\n      errrorMessage = errorData.fault.faultstring;\n    }\n  } else {\n    toast.error(errrorMessage);\n  }\n\n  return Promise.reject(ex);\n});\n"]},"metadata":{},"sourceType":"module"}